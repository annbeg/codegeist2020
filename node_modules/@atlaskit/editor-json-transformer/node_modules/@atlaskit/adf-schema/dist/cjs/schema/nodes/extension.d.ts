import { NodeSpec } from 'prosemirror-model';
import { PanelDefinition as Panel } from './panel';
import { ParagraphDefinition as Paragraph } from './paragraph';
import { BlockQuoteDefinition as Blockquote } from './blockquote';
import { OrderedListDefinition as OrderedList } from './ordered-list';
import { BulletListDefinition as BulletList } from './bullet-list';
import { RuleDefinition as Rule } from './rule';
import { HeadingDefinition as Heading } from './heading';
import { CodeBlockDefinition as CodeBlock } from './code-block';
import { MediaGroupDefinition as MediaGroup } from './media-group';
import { MediaSingleDefinition as MediaSingle } from './media-single';
import { DecisionListDefinition as DecisionList } from './decision-list';
import { TaskListDefinition as TaskList } from './task-list';
import { TableDefinition as Table } from './tableNodes';
import { BlockCardDefinition as BlockCard } from './block-card';
export declare type Layout = 'default' | 'wide' | 'full-width';
/**
 * @name extension_node
 */
export interface ExtensionDefinition {
    type: 'extension';
    attrs: {
        /**
         * @minLength 1
         */
        extensionKey: string;
        /**
         * @minLength 1
         */
        extensionType: string;
        parameters?: object;
        text?: string;
        layout?: Layout;
    };
}
export declare const extension: NodeSpec;
/**
 * @name extension_content
 * @minItems 1
 * @allowUnsupportedBlock true
 */
export declare type ExtensionContent = Array<Panel | Paragraph | Blockquote | OrderedList | BulletList | Rule | Heading | CodeBlock | MediaGroup | MediaSingle | DecisionList | TaskList | Table | ExtensionDefinition | BlockCard>;
